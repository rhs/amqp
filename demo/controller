#!/usr/bin/python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

from common import *
from fnmatch import fnmatch as match

class Client:

  def __init__(self, vendor, address, link):
    self.vendor = vendor
    self.address = address
    self.link = link

  def send(self, msg):
    self.link.send(settled=True, message=msg)

  def __repr__(self):
    return "Client(%r, %r)" % (self.vendor, self.address)

class Controller:

  def __init__(self, ssn, lnk):
    self.ssn = ssn
    self.clients = []

  def relay(self, msg):
    target = msg["target"]
    for c in self.clients:
      if match(c.vendor, target):
        c.send(msg)
    return ACCEPTED

  def announce(self, msg):
    vendor = msg["vendor"]
    address = msg["address"]
    link = self.ssn.sender(address)
    c = Client(vendor, address, link)
    self.clients.append(c)
    print "The %s client is listening on: %s" % (vendor, address)
    return ACCEPTED

  def create_link(self, msg):
    return self.relay(msg)

  def send_message(self, msg):
    return self.relay(msg)

  def log(self, msg):
    print "LOG:", msg
    return ACCEPTED

  def reset(self, msg):
    return self.relay(msg)

main(Controller, "control")
